name: 🧪 Test Release Workflow

on:
  workflow_dispatch:  # Manual trigger for testing
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'

permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  test-release:
    name: Test Release Process
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🔍 Check Permissions
      run: |
        echo "Testing GitHub Actions permissions..."
        echo "Repository: ${{ github.repository }}"
        echo "Actor: ${{ github.actor }}"
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        
        # Test git config
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
        echo "Git configuration set successfully"
        
    - name: 🔍 Check if Release Needed
      id: check
      run: |
        # Check if last commit contains [skip-release] or [no-release]
        COMMIT_MSG=$(git log -1 --pretty=%B)
        echo "Last commit message: $COMMIT_MSG"
        
        if echo "$COMMIT_MSG" | grep -E '\[(skip-release|no-release)\]'; then
          echo "should-release=false" >> $GITHUB_OUTPUT
          echo "Release skipped due to commit message flag"
        else
          echo "should-release=true" >> $GITHUB_OUTPUT
          echo "Release is needed"
        fi
        
    - name: 🐹 Setup Go
      if: steps.check.outputs.should-release == 'true'
      uses: actions/setup-go@v4
      with:
        go-version: 1.24
        
    - name: 📚 Download Dependencies
      if: steps.check.outputs.should-release == 'true'
      run: |
        go mod download
        go mod verify
        
    - name: 🧪 Run Tests
      if: steps.check.outputs.should-release == 'true'
      run: |
        go test -v ./... || echo "Tests completed (some may have failed)"
        
    - name: 🔨 Build Binary (Test)
      if: steps.check.outputs.should-release == 'true'
      run: |
        echo "Building test binary..."
        go build -o tempfile-test ./cmd/server
        ls -la tempfile-test
        
    - name: 🏷️ Dry Run Semantic Release
      if: steps.check.outputs.should-release == 'true'
      id: semantic_dry_run
      uses: cycjimmy/semantic-release-action@v4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dry_run: true
        extra_plugins: |
          @semantic-release/changelog
          conventional-changelog-conventionalcommits
          
    - name: 📊 Show Release Info
      if: steps.check.outputs.should-release == 'true'
      run: |
        echo "## 🧪 Release Test Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Test Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Would Release**: ${{ steps.semantic_dry_run.outputs.new_release_published }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Next Version**: ${{ steps.semantic_dry_run.outputs.new_release_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: \`${GITHUB_SHA:0:7}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ steps.semantic_dry_run.outputs.new_release_published }}" = "true" ]; then
          echo "✅ **Release would be created successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Release Notes Preview" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.semantic_dry_run.outputs.new_release_notes }}" >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ **No release needed** - no relevant changes detected" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: 🚫 No Release Needed
      if: steps.check.outputs.should-release == 'false'
      run: |
        echo "## ⏭️ Release Skipped" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Release was skipped due to commit message flag [skip-release] or [no-release]" >> $GITHUB_STEP_SUMMARY
