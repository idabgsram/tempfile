version: "3.8"

services:
  tempfile:
    # Use pre-built image from GHCR (comment out 'build' section below to use this)
    image: ghcr.io/pandeptwidyaop/tempfile:latest
    
    # Or build locally (comment out 'image' line above to use this)
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - APP_ENV=production
      - DEBUG=false
      - PUBLIC_URL=http://localhost:3000
      - ENABLE_CORS=true
      - CORS_ORIGINS=*
      - ENABLE_WEB_UI=true
      # Rate limiting configuration
      - ENABLE_RATE_LIMIT=true
      - RATE_LIMIT_STORE=redis
      - REDIS_URL=redis://redis:6379
      - RATE_LIMIT_UPLOADS_PER_MINUTE=10
      - RATE_LIMIT_BYTES_PER_HOUR=209715200
      - RATE_LIMIT_TRUSTED_PROXIES=172.16.0.0/12,10.0.0.0/8
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/health",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.tempfile.rule=Host(`tempfile.localhost`)"
      - "traefik.http.services.tempfile.loadbalancer.server.port=3000"
      # Traefik health check
      - "traefik.http.services.tempfile.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.tempfile.loadbalancer.healthcheck.interval=30s"

  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      - "traefik.enable=false"

volumes:
  redis_data:
